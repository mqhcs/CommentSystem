// Code generated by ent, DO NOT EDIT.

package replyindex

import (
	"comment-main/app/comment-service/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldID, id))
}

// Oid applies equality check predicate on the "oid" field. It's identical to OidEQ.
func Oid(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldOid, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldType, v))
}

// Mid applies equality check predicate on the "mid" field. It's identical to MidEQ.
func Mid(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldMid, v))
}

// Root applies equality check predicate on the "root" field. It's identical to RootEQ.
func Root(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldRoot, v))
}

// Parent applies equality check predicate on the "parent" field. It's identical to ParentEQ.
func Parent(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldParent, v))
}

// Count applies equality check predicate on the "count" field. It's identical to CountEQ.
func Count(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldCount, v))
}

// Rcount applies equality check predicate on the "rcount" field. It's identical to RcountEQ.
func Rcount(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldRcount, v))
}

// Acount applies equality check predicate on the "acount" field. It's identical to AcountEQ.
func Acount(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldAcount, v))
}

// Likes applies equality check predicate on the "likes" field. It's identical to LikesEQ.
func Likes(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldLikes, v))
}

// Hates applies equality check predicate on the "hates" field. It's identical to HatesEQ.
func Hates(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldHates, v))
}

// ReportCount applies equality check predicate on the "report_count" field. It's identical to ReportCountEQ.
func ReportCount(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldReportCount, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldState, v))
}

// Ctime applies equality check predicate on the "ctime" field. It's identical to CtimeEQ.
func Ctime(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldCtime, v))
}

// Mtime applies equality check predicate on the "mtime" field. It's identical to MtimeEQ.
func Mtime(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldMtime, v))
}

// OidEQ applies the EQ predicate on the "oid" field.
func OidEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldOid, v))
}

// OidNEQ applies the NEQ predicate on the "oid" field.
func OidNEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldOid, v))
}

// OidIn applies the In predicate on the "oid" field.
func OidIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldOid, vs...))
}

// OidNotIn applies the NotIn predicate on the "oid" field.
func OidNotIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldOid, vs...))
}

// OidGT applies the GT predicate on the "oid" field.
func OidGT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldOid, v))
}

// OidGTE applies the GTE predicate on the "oid" field.
func OidGTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldOid, v))
}

// OidLT applies the LT predicate on the "oid" field.
func OidLT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldOid, v))
}

// OidLTE applies the LTE predicate on the "oid" field.
func OidLTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldOid, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldType, v))
}

// MidEQ applies the EQ predicate on the "mid" field.
func MidEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldMid, v))
}

// MidNEQ applies the NEQ predicate on the "mid" field.
func MidNEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldMid, v))
}

// MidIn applies the In predicate on the "mid" field.
func MidIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldMid, vs...))
}

// MidNotIn applies the NotIn predicate on the "mid" field.
func MidNotIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldMid, vs...))
}

// MidGT applies the GT predicate on the "mid" field.
func MidGT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldMid, v))
}

// MidGTE applies the GTE predicate on the "mid" field.
func MidGTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldMid, v))
}

// MidLT applies the LT predicate on the "mid" field.
func MidLT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldMid, v))
}

// MidLTE applies the LTE predicate on the "mid" field.
func MidLTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldMid, v))
}

// RootEQ applies the EQ predicate on the "root" field.
func RootEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldRoot, v))
}

// RootNEQ applies the NEQ predicate on the "root" field.
func RootNEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldRoot, v))
}

// RootIn applies the In predicate on the "root" field.
func RootIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldRoot, vs...))
}

// RootNotIn applies the NotIn predicate on the "root" field.
func RootNotIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldRoot, vs...))
}

// RootGT applies the GT predicate on the "root" field.
func RootGT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldRoot, v))
}

// RootGTE applies the GTE predicate on the "root" field.
func RootGTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldRoot, v))
}

// RootLT applies the LT predicate on the "root" field.
func RootLT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldRoot, v))
}

// RootLTE applies the LTE predicate on the "root" field.
func RootLTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldRoot, v))
}

// ParentEQ applies the EQ predicate on the "parent" field.
func ParentEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldParent, v))
}

// ParentNEQ applies the NEQ predicate on the "parent" field.
func ParentNEQ(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldParent, v))
}

// ParentIn applies the In predicate on the "parent" field.
func ParentIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldParent, vs...))
}

// ParentNotIn applies the NotIn predicate on the "parent" field.
func ParentNotIn(vs ...int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldParent, vs...))
}

// ParentGT applies the GT predicate on the "parent" field.
func ParentGT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldParent, v))
}

// ParentGTE applies the GTE predicate on the "parent" field.
func ParentGTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldParent, v))
}

// ParentLT applies the LT predicate on the "parent" field.
func ParentLT(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldParent, v))
}

// ParentLTE applies the LTE predicate on the "parent" field.
func ParentLTE(v int64) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldParent, v))
}

// CountEQ applies the EQ predicate on the "count" field.
func CountEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldCount, v))
}

// CountNEQ applies the NEQ predicate on the "count" field.
func CountNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldCount, v))
}

// CountIn applies the In predicate on the "count" field.
func CountIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldCount, vs...))
}

// CountNotIn applies the NotIn predicate on the "count" field.
func CountNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldCount, vs...))
}

// CountGT applies the GT predicate on the "count" field.
func CountGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldCount, v))
}

// CountGTE applies the GTE predicate on the "count" field.
func CountGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldCount, v))
}

// CountLT applies the LT predicate on the "count" field.
func CountLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldCount, v))
}

// CountLTE applies the LTE predicate on the "count" field.
func CountLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldCount, v))
}

// RcountEQ applies the EQ predicate on the "rcount" field.
func RcountEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldRcount, v))
}

// RcountNEQ applies the NEQ predicate on the "rcount" field.
func RcountNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldRcount, v))
}

// RcountIn applies the In predicate on the "rcount" field.
func RcountIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldRcount, vs...))
}

// RcountNotIn applies the NotIn predicate on the "rcount" field.
func RcountNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldRcount, vs...))
}

// RcountGT applies the GT predicate on the "rcount" field.
func RcountGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldRcount, v))
}

// RcountGTE applies the GTE predicate on the "rcount" field.
func RcountGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldRcount, v))
}

// RcountLT applies the LT predicate on the "rcount" field.
func RcountLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldRcount, v))
}

// RcountLTE applies the LTE predicate on the "rcount" field.
func RcountLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldRcount, v))
}

// AcountEQ applies the EQ predicate on the "acount" field.
func AcountEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldAcount, v))
}

// AcountNEQ applies the NEQ predicate on the "acount" field.
func AcountNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldAcount, v))
}

// AcountIn applies the In predicate on the "acount" field.
func AcountIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldAcount, vs...))
}

// AcountNotIn applies the NotIn predicate on the "acount" field.
func AcountNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldAcount, vs...))
}

// AcountGT applies the GT predicate on the "acount" field.
func AcountGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldAcount, v))
}

// AcountGTE applies the GTE predicate on the "acount" field.
func AcountGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldAcount, v))
}

// AcountLT applies the LT predicate on the "acount" field.
func AcountLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldAcount, v))
}

// AcountLTE applies the LTE predicate on the "acount" field.
func AcountLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldAcount, v))
}

// LikesEQ applies the EQ predicate on the "likes" field.
func LikesEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldLikes, v))
}

// LikesNEQ applies the NEQ predicate on the "likes" field.
func LikesNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldLikes, v))
}

// LikesIn applies the In predicate on the "likes" field.
func LikesIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldLikes, vs...))
}

// LikesNotIn applies the NotIn predicate on the "likes" field.
func LikesNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldLikes, vs...))
}

// LikesGT applies the GT predicate on the "likes" field.
func LikesGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldLikes, v))
}

// LikesGTE applies the GTE predicate on the "likes" field.
func LikesGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldLikes, v))
}

// LikesLT applies the LT predicate on the "likes" field.
func LikesLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldLikes, v))
}

// LikesLTE applies the LTE predicate on the "likes" field.
func LikesLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldLikes, v))
}

// HatesEQ applies the EQ predicate on the "hates" field.
func HatesEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldHates, v))
}

// HatesNEQ applies the NEQ predicate on the "hates" field.
func HatesNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldHates, v))
}

// HatesIn applies the In predicate on the "hates" field.
func HatesIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldHates, vs...))
}

// HatesNotIn applies the NotIn predicate on the "hates" field.
func HatesNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldHates, vs...))
}

// HatesGT applies the GT predicate on the "hates" field.
func HatesGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldHates, v))
}

// HatesGTE applies the GTE predicate on the "hates" field.
func HatesGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldHates, v))
}

// HatesLT applies the LT predicate on the "hates" field.
func HatesLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldHates, v))
}

// HatesLTE applies the LTE predicate on the "hates" field.
func HatesLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldHates, v))
}

// ReportCountEQ applies the EQ predicate on the "report_count" field.
func ReportCountEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldReportCount, v))
}

// ReportCountNEQ applies the NEQ predicate on the "report_count" field.
func ReportCountNEQ(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldReportCount, v))
}

// ReportCountIn applies the In predicate on the "report_count" field.
func ReportCountIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldReportCount, vs...))
}

// ReportCountNotIn applies the NotIn predicate on the "report_count" field.
func ReportCountNotIn(vs ...int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldReportCount, vs...))
}

// ReportCountGT applies the GT predicate on the "report_count" field.
func ReportCountGT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldReportCount, v))
}

// ReportCountGTE applies the GTE predicate on the "report_count" field.
func ReportCountGTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldReportCount, v))
}

// ReportCountLT applies the LT predicate on the "report_count" field.
func ReportCountLT(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldReportCount, v))
}

// ReportCountLTE applies the LTE predicate on the "report_count" field.
func ReportCountLTE(v int32) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldReportCount, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int8) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldState, v))
}

// CtimeEQ applies the EQ predicate on the "ctime" field.
func CtimeEQ(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldCtime, v))
}

// CtimeNEQ applies the NEQ predicate on the "ctime" field.
func CtimeNEQ(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldCtime, v))
}

// CtimeIn applies the In predicate on the "ctime" field.
func CtimeIn(vs ...time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldCtime, vs...))
}

// CtimeNotIn applies the NotIn predicate on the "ctime" field.
func CtimeNotIn(vs ...time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldCtime, vs...))
}

// CtimeGT applies the GT predicate on the "ctime" field.
func CtimeGT(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldCtime, v))
}

// CtimeGTE applies the GTE predicate on the "ctime" field.
func CtimeGTE(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldCtime, v))
}

// CtimeLT applies the LT predicate on the "ctime" field.
func CtimeLT(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldCtime, v))
}

// CtimeLTE applies the LTE predicate on the "ctime" field.
func CtimeLTE(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldCtime, v))
}

// MtimeEQ applies the EQ predicate on the "mtime" field.
func MtimeEQ(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldEQ(FieldMtime, v))
}

// MtimeNEQ applies the NEQ predicate on the "mtime" field.
func MtimeNEQ(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNEQ(FieldMtime, v))
}

// MtimeIn applies the In predicate on the "mtime" field.
func MtimeIn(vs ...time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldIn(FieldMtime, vs...))
}

// MtimeNotIn applies the NotIn predicate on the "mtime" field.
func MtimeNotIn(vs ...time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldNotIn(FieldMtime, vs...))
}

// MtimeGT applies the GT predicate on the "mtime" field.
func MtimeGT(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGT(FieldMtime, v))
}

// MtimeGTE applies the GTE predicate on the "mtime" field.
func MtimeGTE(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldGTE(FieldMtime, v))
}

// MtimeLT applies the LT predicate on the "mtime" field.
func MtimeLT(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLT(FieldMtime, v))
}

// MtimeLTE applies the LTE predicate on the "mtime" field.
func MtimeLTE(v time.Time) predicate.ReplyIndex {
	return predicate.ReplyIndex(sql.FieldLTE(FieldMtime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ReplyIndex) predicate.ReplyIndex {
	return predicate.ReplyIndex(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ReplyIndex) predicate.ReplyIndex {
	return predicate.ReplyIndex(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ReplyIndex) predicate.ReplyIndex {
	return predicate.ReplyIndex(func(s *sql.Selector) {
		p(s.Not())
	})
}
